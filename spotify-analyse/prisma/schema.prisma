datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model ApiUser {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  access_token String?
  refreshtoken String?
  expries_at   Int?
  scope        String?
  userId       String  @map("user") @db.ObjectId
  user         User    @relation(fields: [userId], references: [id])
}

model Artist {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  spotify_id        String?
  name              String?
  image             String?
  artist_data       ArtistData[]
  invest_artist_log InvestArtistLog[]
  invest_artist     InvestArtist[]
  userId            String            @map("user") @db.ObjectId
}

model ArtistData {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  date              DateTime @default(now())
  monthly_listeners Int?
  data_count        Int?     @default(0)
  artistId          String   @map("artist") @db.ObjectId
  artist            Artist   @relation(fields: [artistId], references: [id])
}

model InvestArtistLog {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  coins        Int?
  date         DateTime @default(now())
  operation_id Int?
  operation    String?
  artistId     String   @map("artist") @db.ObjectId
  artist       Artist   @relation(fields: [artistId], references: [id])
  userId       String   @map("user") @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
}

model InvestArtist {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  coins     Int?
  plusCoins Int?   @default(0)
  artistId  String @map("artist") @db.ObjectId
  artist    Artist @relation(fields: [artistId], references: [id])
  userId    String @map("user") @db.ObjectId
  user      User   @relation(fields: [userId], references: [id])
}

model TradeUser {
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  coins                Int?   @default(10000)
  coins_invested       Int?   @default(0)
  coins_earned         Int?   @default(0)
  coins_lost           Int?   @default(0)
  coins_invested_total Int?   @default(0)
  coins_earned_total   Int?   @default(0)
  coins_lost_total     Int?   @default(0)
  userId               String @unique @map("user") @db.ObjectId
  user                 User   @relation(fields: [userId], references: [id])
}

model User {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  spotify_id        String?
  name              String?
  email             String?
  image             String?
  api_user          ApiUser[]
  invest_artist_log InvestArtistLog[]
  trade_user        TradeUser?
  invert_artist     InvestArtist[]
}
